#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ MarketplaceAgent
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –õ–Æ–ë–´–ú–ò –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º–∏ —á–µ—Ä–µ–∑ LLM-–∞–Ω–∞–ª–∏–∑
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent))

from app.agent.marketplace import MarketplaceAgent
from app.logger import logger


async def demo_marketplace_agent():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ MarketplaceAgent"""

    # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞
    agent = MarketplaceAgent()

    try:
        print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ MarketplaceAgent")
        print("=" * 60)
        print("üéØ –≠—Ç–æ—Ç –∞–≥–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –õ–Æ–ë–´–ú–ò –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º–∏!")
        print("üìä –ò—Å–ø–æ–ª—å–∑—É–µ—Ç LLM –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–∞–π—Ç–æ–≤")

        # –ü—Ä–∏–º–µ—Ä 1: –ü–æ–∏—Å–∫ –Ω–∞ OZON
        print("\nüì± –ü—Ä–∏–º–µ—Ä 1: –ü–æ–∏—Å–∫ —Å–º–∞—Ä—Ç—Ñ–æ–Ω–æ–≤ –Ω–∞ OZON")
        print("-" * 40)

        result = await agent.search_products_simple(
            "https://www.ozon.ru", "iPhone 15", max_results=3
        )
        print(result)

        # –ü—Ä–∏–º–µ—Ä 2: –ü–æ–∏—Å–∫ –Ω–∞ Wildberries
        print("\nüëü –ü—Ä–∏–º–µ—Ä 2: –ü–æ–∏—Å–∫ –∫—Ä–æ—Å—Å–æ–≤–æ–∫ –Ω–∞ Wildberries")
        print("-" * 40)

        result = await agent.search_products_simple(
            "https://www.wildberries.ru", "Nike Air Max", max_results=3
        )
        print(result)

        # –ü—Ä–∏–º–µ—Ä 3: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–µ–∂–¥—É –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º–∏
        print("\n‚öñÔ∏è –ü—Ä–∏–º–µ—Ä 3: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –º–µ–∂–¥—É –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º–∏")
        print("-" * 40)

        result = await agent.multi_marketplace_comparison(
            "–Ω–∞—É—à–Ω–∏–∫–∏ Apple AirPods",
            ["https://www.ozon.ru", "https://www.wildberries.ru"],
            max_results_per_site=2,
        )
        print(result)

        # –ü—Ä–∏–º–µ—Ä 4: –ü–æ–∏—Å–∫ –ª—É—á—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞ —Å –∫—Ä–∏—Ç–µ—Ä–∏—è–º–∏
        print("\nüèÜ –ü—Ä–∏–º–µ—Ä 4: –ü–æ–∏—Å–∫ –ª—É—á—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º")
        print("-" * 40)

        result = await agent.find_best_product(
            "https://www.ozon.ru",
            "—É–º–Ω—ã–µ —á–∞—Å—ã",
            criteria="—Ü–µ–Ω–∞ –¥–æ 20000 —Ä—É–±–ª–µ–π –∏ —Ö–æ—Ä–æ—à–∏–µ –æ—Ç–∑—ã–≤—ã",
            max_price=20000,
        )
        print(result)

        # –ü—Ä–∏–º–µ—Ä 5: –ê–Ω–∞–ª–∏–∑ –æ—Ç–∑—ã–≤–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å URL)
        print("\nüí¨ –ü—Ä–∏–º–µ—Ä 5: –ê–Ω–∞–ª–∏–∑ –æ—Ç–∑—ã–≤–æ–≤ –ø—Ä–æ–¥—É–∫—Ç–∞")
        print("-" * 40)

        # –°–Ω–∞—á–∞–ª–∞ –Ω–∞–π–¥–µ–º —Ç–æ–≤–∞—Ä, –∞ –ø–æ—Ç–æ–º –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–∑—ã–≤—ã
        search_result = await agent.search_products_simple(
            "https://www.ozon.ru", "–ø–ª–∞–Ω—à–µ—Ç iPad", max_results=1
        )
        print("–ù–∞–π–¥–µ–Ω —Ç–æ–≤–∞—Ä –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—Ç–∑—ã–≤–æ–≤:")
        print(search_result)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

    finally:
        # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã
        await agent.cleanup()
        print("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Ä–µ—Å—É—Ä—Å—ã –æ—á–∏—â–µ–Ω—ã")


async def interactive_search_demo():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤"""

    agent = MarketplaceAgent()

    try:
        print("üîç –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤")
        print("=" * 40)
        print("üåê –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã:")
        print("‚Ä¢ https://www.ozon.ru")
        print("‚Ä¢ https://www.wildberries.ru")
        print("‚Ä¢ https://aliexpress.com (–∏ –¥—Ä—É–≥–∏–µ)")

        # –í—ã–±–æ—Ä –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞
        marketplace_url = input("\n–í–≤–µ–¥–∏—Ç–µ URL –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞: ").strip()
        if not marketplace_url.startswith("http"):
            marketplace_url = f"https://{marketplace_url}"

        # –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        query = input("–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞: ").strip()

        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        max_results = input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 5): ").strip()
        max_results = int(max_results) if max_results.isdigit() else 5

        print(f"\nüîÑ –ò—â–µ–º '{query}' –Ω–∞ {marketplace_url}...")
        result = await agent.search_products_simple(marketplace_url, query, max_results)
        print(result)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º –ø–æ–∏—Å–∫–µ: {e}")
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

    finally:
        await agent.cleanup()


async def marketplace_analysis_demo():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞"""

    agent = MarketplaceAgent()

    try:
        print("üî¨ –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞")
        print("=" * 40)

        marketplace_url = input("–í–≤–µ–¥–∏—Ç–µ URL –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: ").strip()
        if not marketplace_url.startswith("http"):
            marketplace_url = f"https://{marketplace_url}"

        print(f"\nüìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É {marketplace_url}...")
        result = await agent.analyze_marketplace(marketplace_url)
        print(result)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∞–Ω–∞–ª–∏–∑–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: {e}")
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

    finally:
        await agent.cleanup()


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –º–µ–Ω—é –≤—ã–±–æ—Ä–∞"""

    print("üõçÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ MarketplaceAgent!")
    print("=" * 70)
    print("üéØ –≠—Ç–æ—Ç –∞–≥–µ–Ω—Ç –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –õ–Æ–ë–´–ú–ò –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º–∏!")
    print("üß† –ò—Å–ø–æ–ª—å–∑—É–µ—Ç LLM –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–∞–π—Ç–æ–≤")
    print("\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:")
    print("1. –ü–æ–ª–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è (OZON, Wildberries, —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ)")
    print("2. –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤")
    print("3. –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞")
    print("4. –í—ã—Ö–æ–¥")

    while True:
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): ").strip()

        if choice == "1":
            asyncio.run(demo_marketplace_agent())
            break
        elif choice == "2":
            asyncio.run(interactive_search_demo())
            break
        elif choice == "3":
            asyncio.run(marketplace_analysis_demo())
            break
        elif choice == "4":
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 4.")


if __name__ == "__main__":
    main()
