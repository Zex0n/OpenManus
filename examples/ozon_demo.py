import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent))

from app.agent.ozon import OzonAgent
from app.logger import logger


async def demo_ozon_agent():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã OzonAgent"""

    # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞
    agent = OzonAgent()

    try:
        print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã OzonAgent")
        print("=" * 50)

        # –ü—Ä–∏–º–µ—Ä 1: –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤
        print("\nüì± –ü—Ä–∏–º–µ—Ä 1: –ü–æ–∏—Å–∫ —Å–º–∞—Ä—Ç—Ñ–æ–Ω–æ–≤")
        print("-" * 30)

        result = await agent.search_products("iPhone 15", max_results=3)
        print(result)

        # –ü—Ä–∏–º–µ—Ä 2: –ü–æ–∏—Å–∫ —Å –∞–Ω–∞–ª–∏–∑–æ–º –æ—Ç–∑—ã–≤–æ–≤
        print("\nüíª –ü—Ä–∏–º–µ—Ä 2: –ü–æ–∏—Å–∫ –Ω–æ—É—Ç–±—É–∫–æ–≤ —Å –∞–Ω–∞–ª–∏–∑–æ–º")
        print("-" * 30)

        result = await agent.run(
            "–ù–∞–π–¥–∏ –Ω–æ—É—Ç–±—É–∫–∏ ASUS –¥–æ 100000 —Ä—É–±–ª–µ–π –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –æ—Ç–∑—ã–≤—ã –Ω–∞ –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä"
        )
        print(result)

        # –ü—Ä–∏–º–µ—Ä 3: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤
        print("\n‚öñÔ∏è –ü—Ä–∏–º–µ—Ä 3: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤")
        print("-" * 30)

        result = await agent.run(
            "–ù–∞–π–¥–∏ –Ω–∞—É—à–Ω–∏–∫–∏ Apple AirPods –∏ Sony WH-1000XM4, —Å—Ä–∞–≤–Ω–∏ –∏—Ö –ø–æ —Ü–µ–Ω–µ –∏ –æ—Ç–∑—ã–≤–∞–º"
        )
        print(result)

        # –ü—Ä–∏–º–µ—Ä 4: –ü–æ–∏—Å–∫ –ª—É—á—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞
        print("\nüèÜ –ü—Ä–∏–º–µ—Ä 4: –ü–æ–∏—Å–∫ –ª—É—á—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞")
        print("-" * 30)

        result = await agent.find_best_product(
            "—É–º–Ω—ã–µ —á–∞—Å—ã", "—Ü–µ–Ω–∞ –¥–æ 20000 —Ä—É–±–ª–µ–π –∏ —Ö–æ—Ä–æ—à–∏–µ –æ—Ç–∑—ã–≤—ã"
        )
        print(result)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

    finally:
        # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã
        await agent.cleanup()
        print("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Ä–µ—Å—É—Ä—Å—ã –æ—á–∏—â–µ–Ω—ã")


async def quick_search_demo():
    """–ë—ã—Å—Ç—Ä—ã–π –ø—Ä–∏–º–µ—Ä –ø–æ–∏—Å–∫–∞"""

    agent = OzonAgent()

    try:
        print("üîç –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤")
        print("=" * 30)

        # –ü–æ–∏—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
        query = input("–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞: ")
        result = await agent.search_products(query, max_results=5)
        print(result)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –±—ã—Å—Ç—Ä–æ–º –ø–æ–∏—Å–∫–µ: {e}")
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

    finally:
        await agent.cleanup()


async def review_analysis_demo():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –æ—Ç–∑—ã–≤–æ–≤"""

    agent = OzonAgent()

    try:
        print("üí¨ –ê–Ω–∞–ª–∏–∑ –æ—Ç–∑—ã–≤–æ–≤")
        print("=" * 30)

        # –ê–Ω–∞–ª–∏–∑ –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä
        product_url = input("–í–≤–µ–¥–∏—Ç–µ URL —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—Ç–∑—ã–≤–æ–≤: ")
        result = await agent.analyze_product_reviews(product_url, max_reviews=10)
        print(result)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∞–Ω–∞–ª–∏–∑–µ –æ—Ç–∑—ã–≤–æ–≤: {e}")
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

    finally:
        await agent.cleanup()


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –º–µ–Ω—é –≤—ã–±–æ—Ä–∞"""

    print("üõçÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é OzonAgent!")
    print("=" * 50)
    print("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:")
    print("1. –ü–æ–ª–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è (–ø–æ–∏—Å–∫, –∞–Ω–∞–ª–∏–∑, —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ)")
    print("2. –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤")
    print("3. –ê–Ω–∞–ª–∏–∑ –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞ —Ç–æ–≤–∞—Ä")
    print("4. –í—ã—Ö–æ–¥")

    while True:
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): ").strip()

        if choice == "1":
            asyncio.run(demo_ozon_agent())
            break
        elif choice == "2":
            asyncio.run(quick_search_demo())
            break
        elif choice == "3":
            asyncio.run(review_analysis_demo())
            break
        elif choice == "4":
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 4.")


if __name__ == "__main__":
    main()
