import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent))

from app.agent.ozon_only import OzonOnlyAgent
from app.logger import logger


async def search_trimmer_demo():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–Ω–æ–≥–æ —Ç—Ä–∏–º–º–µ—Ä–∞"""

    print("üîã –ü–æ–∏—Å–∫ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–Ω–æ–≥–æ —Ç—Ä–∏–º–º–µ—Ä–∞ –Ω–∞ Ozon")
    print("=" * 50)

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π OzonOnlyAgent
    agent = OzonOnlyAgent()

    try:
        # –í–∞—à –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å
        query = "–Ω–∞–π–¥–∏ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–Ω—ã–π —Ç—Ä–∏–º–º–µ—Ä –Ω–∞ ozon –Ω–µ –¥–æ—Ä–æ–∂–µ 3000 —Ä—É–±–ª–µ–π –∏ –ø—Ä–æ–≤–µ—Ä—å –ø–æ –æ—Ç–∑—ã–≤–∞–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –æ–Ω –Ω–∞–¥–µ–∂–Ω—ã–π"

        print(f"üéØ –í—ã–ø–æ–ª–Ω—è—é –∑–∞–ø—Ä–æ—Å: {query}")
        print("-" * 50)

        result = await agent.run(query)
        print(result)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

    finally:
        # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã
        await agent.cleanup()
        print("\n‚úÖ –†–µ—Å—É—Ä—Å—ã –æ—á–∏—â–µ–Ω—ã")


async def search_with_specific_method():
    """–ü–æ–∏—Å–∫ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞"""

    print("\nüéØ –ü–æ–∏—Å–∫ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞")
    print("=" * 50)

    agent = OzonOnlyAgent()

    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å –∞–Ω–∞–ª–∏–∑–æ–º
        result = await agent.find_best_by_price_and_reviews(
            query="–∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–Ω—ã–π —Ç—Ä–∏–º–º–µ—Ä", max_price=3000
        )
        print(result)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e}")
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

    finally:
        await agent.cleanup()


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""

    print("üõçÔ∏è –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞ —Ç—Ä–∏–º–º–µ—Ä–∞ –Ω–∞ Ozon")
    print("=" * 60)
    print("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–∏—Å–∫–∞:")
    print("1. –û–±—ã—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å (–∫–∞–∫ –≤—ã –ø–∏—Å–∞–ª–∏)")
    print("2. –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –ø–æ–∏—Å–∫–∞")
    print("3. –û–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞")
    print("4. –í—ã—Ö–æ–¥")

    while True:
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): ").strip()

        if choice == "1":
            asyncio.run(search_trimmer_demo())
            break
        elif choice == "2":
            asyncio.run(search_with_specific_method())
            break
        elif choice == "3":
            asyncio.run(search_trimmer_demo())
            asyncio.run(search_with_specific_method())
            break
        elif choice == "4":
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 4.")


if __name__ == "__main__":
    main()
