#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã OzonAgent
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent))

from app.agent.ozon import OzonAgent
from app.logger import logger


async def test_ozon_agent():
    """–¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π OzonAgent"""

    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OzonAgent")
    print("=" * 40)

    agent = OzonAgent()

    try:
        # –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤
        print("\nüîç –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤")
        print("-" * 30)

        result = await agent.search_products("iPhone", max_results=2)
        print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞:")
        print(result[:500] + "..." if len(result) > 500 else result)

        # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        print("\nüîß –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–≥–µ–Ω—Ç–∞")
        print("-" * 30)

        print(f"‚úÖ –ò–º—è –∞–≥–µ–Ω—Ç–∞: {agent.name}")
        print(f"‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ: {agent.description}")
        print(f"‚úÖ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤: {agent.max_steps}")
        print(
            f"‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: {list(agent.available_tools.tool_map.keys())}"
        )

        # –¢–µ—Å—Ç 3: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
        print("\nüí¨ –¢–µ—Å—Ç 3: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å")
        print("-" * 30)

        result = await agent.run("–ù–∞–π–¥–∏ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä 'Samsung Galaxy' –∏ –ø–æ–∫–∞–∂–∏ –µ–≥–æ —Ü–µ–Ω—É")
        print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞:")
        print(result[:500] + "..." if len(result) > 500 else result)

        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        print(f"‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: {e}")

    finally:
        # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã
        await agent.cleanup()
        print("\nüßπ –†–µ—Å—É—Ä—Å—ã –æ—á–∏—â–µ–Ω—ã")


async def test_ozon_tool_directly():
    """–¢–µ—Å—Ç OzonTool –Ω–∞–ø—Ä—è–º—É—é"""

    print("\nüõ†Ô∏è –¢–µ—Å—Ç OzonTool –Ω–∞–ø—Ä—è–º—É—é")
    print("=" * 40)

    from app.tool.ozon_tool import OzonTool

    tool = OzonTool()

    try:
        # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞
        print("\nüîç –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ —á–µ—Ä–µ–∑ OzonTool")
        print("-" * 30)

        result = await tool.execute(action="search", query="iPhone", max_results=1)
        print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞:")
        print(result)

        # –ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞
        print("\nüîí –ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞")
        print("-" * 30)

        close_result = await tool.execute(action="close")
        print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–∫—Ä—ã—Ç–∏—è:")
        print(close_result)

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ OzonTool: {e}")
        print(f"‚ùå –¢–µ—Å—Ç OzonTool –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: {e}")

    finally:
        # –û—á–∏—â–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã
        await tool.cleanup()


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""

    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ OzonAgent")
    print("=" * 50)

    # –í—ã–±–æ—Ä —Ç–µ—Å—Ç–∞
    print("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç:")
    print("1. –¢–µ—Å—Ç OzonAgent (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)")
    print("2. –¢–µ—Å—Ç OzonTool –Ω–∞–ø—Ä—è–º—É—é")
    print("3. –û–±–∞ —Ç–µ—Å—Ç–∞")

    while True:
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ—Å—Ç–∞ (1-3): ").strip()

        if choice == "1":
            asyncio.run(test_ozon_agent())
            break
        elif choice == "2":
            asyncio.run(test_ozon_tool_directly())
            break
        elif choice == "3":
            asyncio.run(test_ozon_agent())
            asyncio.run(test_ozon_tool_directly())
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 3.")


if __name__ == "__main__":
    main()
