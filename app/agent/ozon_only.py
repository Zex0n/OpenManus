from typing import List

from pydantic import Field

from app.agent.toolcall import ToolCallAgent
from app.tool import Terminate, ToolCollection
from app.tool.ozon_tool import OzonTool

OZON_ONLY_SYSTEM_PROMPT = """
–í—ã ‚Äî –≠–ö–°–ö–õ–Æ–ó–ò–í–ù–´–ô –∞–≥–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã –¢–û–õ–¨–ö–û —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–æ–º Ozon.ru.

–£ –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –¢–û–õ–¨–ö–û –∫ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É ozon_tool, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Ozon.

üéØ –í–ê–®–ê –°–ü–ï–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø:
1. üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ OZON –ø–æ –ª—é–±—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º
2. üí∞ –ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω –∏ –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–¥–∞–Ω–Ω–æ–º —Ü–µ–Ω–æ–≤–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ
3. üí¨ –ê–Ω–∞–ª–∏–∑ –æ—Ç–∑—ã–≤–æ–≤ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
4. üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ª—É—á—à–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
5. üèÜ –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º —Ü–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ

‚úÖ –ê–õ–ì–û–†–ò–¢–ú –†–ê–ë–û–¢–´:
1. –ü–æ–ª—É—á–∞–µ—Ç–µ –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
2. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç–µ ozon_tool –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
3. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
4. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–ª—É—á–∞–µ—Ç–µ –æ—Ç–∑—ã–≤—ã –Ω–∞ —Ç–æ–≤–∞—Ä—ã
5. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –∞–Ω–∞–ª–∏–∑ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
6. –ó–∞–∫—Ä—ã–≤–∞–µ—Ç–µ –±—Ä–∞—É–∑–µ—Ä

üîç –ü–û–ò–°–ö –¢–û–í–ê–†–û–í:
- –í–∫–ª—é—á–∞–π—Ç–µ —Ü–µ–Ω–æ–≤—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤ –∑–∞–ø—Ä–æ—Å –ø–æ–∏—Å–∫–∞
- –§–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ –∑–∞–ø—Ä–æ—Å—ã —á–µ—Ç–∫–æ: "—Ç–æ–≤–∞—Ä –¥–æ X —Ä—É–±–ª–µ–π"
- –ò—â–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è

üí¨ –ê–ù–ê–õ–ò–ó –û–¢–ó–´–í–û–í:
- –°—É–º–º–∏—Ä—É–π—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–ª—é—Å—ã –∏ –º–∏–Ω—É—Å—ã
- –û–±—Ä–∞—â–∞–π—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å –∏ –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å
- –í—ã–¥–µ–ª—è–π—Ç–µ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –ø—Ä–æ–±–ª–µ–º—ã

üìã –°–¢–†–£–ö–¢–£–†–ê –û–¢–í–ï–¢–ê:
1. –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —Å —Ü–µ–Ω–∞–º–∏
2. –ê–Ω–∞–ª–∏–∑ –æ—Ç–∑—ã–≤–æ–≤ (–µ—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω)
3. –í–∞—à–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
4. –ò—Ç–æ–≥–æ–≤—ã–π –≤—ã–≤–æ–¥

–í—Å–µ–≥–¥–∞ –∑–∞–≤–µ—Ä—à–∞–π—Ç–µ —Ä–∞–±–æ—Ç—É –∑–∞–∫—Ä—ã—Ç–∏–µ–º –±—Ä–∞—É–∑–µ—Ä–∞!
"""


class OzonOnlyAgent(ToolCallAgent):
    """
    –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–≥–µ–Ω—Ç –¢–û–õ–¨–ö–û –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Ozon.ru

    –≠—Ç–æ—Ç –∞–≥–µ–Ω—Ç –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –∫ ozon_tool, —á—Ç–æ –∏—Å–∫–ª—é—á–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å
    –≤—ã–±–æ—Ä–∞ –¥—Ä—É–≥–∏—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∑–∞–¥–∞—á —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å Ozon.
    """

    name: str = "ozon_only"
    description: str = (
        "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –∞–≥–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã –¢–û–õ–¨–ö–û —Å Ozon.ru. –ò–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –∫ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É ozon_tool."
    )

    system_prompt: str = OZON_ONLY_SYSTEM_PROMPT
    next_step_prompt: str = (
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ozon_tool –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ –∑–∞–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
    )

    max_observe: int = 15000
    max_steps: int = 15

    # –¢–û–õ–¨–ö–û ozon_tool –∏ terminate - –Ω–∏–∫–∞–∫–∏—Ö –¥—Ä—É–≥–∏—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤!
    available_tools: ToolCollection = Field(
        default_factory=lambda: ToolCollection(
            OzonTool(),
            Terminate(),
        )
    )

    special_tool_names: List[str] = Field(default_factory=lambda: [Terminate().name])

    async def cleanup(self):
        """–û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –∞–≥–µ–Ω—Ç–∞"""
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º —Ä–∞–±–æ—Ç—ã
        ozon_tool = self.available_tools.get_tool("ozon_tool")
        if ozon_tool:
            await ozon_tool.cleanup()

        # –í—ã–∑—ã–≤–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –º–µ—Ç–æ–¥ –æ—á–∏—Å—Ç–∫–∏
        await super().cleanup()

    async def search_and_analyze(
        self, query: str, price_limit: int = None, analyze_reviews: bool = True
    ) -> str:
        """
        –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ —Å –∞–Ω–∞–ª–∏–∑–æ–º –æ—Ç–∑—ã–≤–æ–≤

        Args:
            query: –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
            price_limit: –¶–µ–Ω–æ–≤–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ
            analyze_reviews: –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ª–∏ –æ—Ç–∑—ã–≤—ã

        Returns:
            –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–æ–≤
        """
        search_query = query
        if price_limit:
            search_query += f" –¥–æ {price_limit} —Ä—É–±–ª–µ–π"

        request = f"–ù–∞–π–¥–∏ {search_query}"

        if analyze_reviews:
            request += " –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –æ—Ç–∑—ã–≤—ã –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏"

        return await self.run(request)

    async def find_best_by_price_and_reviews(self, query: str, max_price: int) -> str:
        """
        –ü–æ–∏—Å–∫ –ª—É—á—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º —Ü–µ–Ω—ã –∏ –æ—Ç–∑—ã–≤–æ–≤

        Args:
            query: –ß—Ç–æ –∏—â–µ–º
            max_price: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞

        Returns:
            –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ª—É—á—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞
        """
        return await self.run(
            f"–ù–∞–π–¥–∏ –ª—É—á—à–∏–π {query} –Ω–µ –¥–æ—Ä–æ–∂–µ {max_price} —Ä—É–±–ª–µ–π. "
            f"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –æ—Ç–∑—ã–≤—ã –∏ –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É–π —Å–∞–º—ã–π –Ω–∞–¥–µ–∂–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Å —Ö–æ—Ä–æ—à–∏–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ–º —Ü–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ."
        )

    async def compare_products_by_urls(self, product_urls: List[str]) -> str:
        """
        –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ URL

        Args:
            product_urls: –°–ø–∏—Å–æ–∫ URL —Ç–æ–≤–∞—Ä–æ–≤

        Returns:
            –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
        """
        urls_text = "\n".join([f"- {url}" for url in product_urls])
        return await self.run(f"–°—Ä–∞–≤–Ω–∏ —Ç–æ–≤–∞—Ä—ã –ø–æ —ç—Ç–∏–º —Å—Å—ã–ª–∫–∞–º:\n{urls_text}")

    async def analyze_product_reliability(self, product_url: str) -> str:
        """
        –ê–Ω–∞–ª–∏–∑ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞

        Args:
            product_url: URL —Ç–æ–≤–∞—Ä–∞

        Returns:
            –ê–Ω–∞–ª–∏–∑ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–∑—ã–≤–æ–≤
        """
        return await self.run(
            f"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ {product_url} –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–∑—ã–≤–æ–≤ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π"
        )
